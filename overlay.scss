.plus, .dot-dot, .no-folder, .done-success, .done-error {
    height: 200px;
    width: 200px;

    display: flex;
    align-items: center;
    justify-content: center;

    z-index: 100;
    border-radius: 50%;

    backface-visibility: hidden;
    transform-style: preserve-3d;
    animation-duration: .2s;
    animation-fill-mode: forwards;
}



.note { 
    position: absolute; 
    z-index: 100;
    white-space: nowrap;
    display: flex;
    align-items: center;
    height: 40px;
}

.dropper, .loader { display: flex; }


//TODO Can/should you change these to transitions as per reactcommunity.org/react-transition-group/css-transition? See for example of where to put styles.
.enter-active {
    .plus, .dot-dot, .no-folder, .done-success {
        animation-name: rot;
    }
}

.exit-active {
    .plus, .no-folder {
        animation-name: rotb;
    }
}

.exit-active .dot-dot {
    animation-name: grow;
    animation-direction: reverse;
}

.enter-done {
    .plus, .dot-dot {
        .overlay-bg { 
            animation-name: pitter-patter;
        }
    }
}

.dot-dot .overlay-bg { background: rgb(177, 154, 140); }
.no-folder .overlay-bg { background: tomato; }
.plus .overlay-bg { background: mediumseagreen; } 
.done-success .overlay-bg { background: mediumseagreen; }
.done-error .overlay-bg { background: tomato }


.note {
    animation-fill-mode: forwards;
    animation-name: slide-in;
    animation-duration: .2s;
}

.exit-active .note {
    animation-name: slide-out;
    animation-duration: .2s;
}


@keyframes slide-in{
    0%{
        transform: scale(0);
        opacity: 0;
    }
}


@keyframes slide-out{
    100%{
        transform: scale(0);
        opacity: 0;
    }
}

.overlay-bg {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: sans-serif;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    animation-duration: 1s;
    box-shadow: 0 0 8px rgba(0,0,0,.1), inset  0 -5px 10px 0 rgba(0,0,0,.1);
}



.pulse{
    position: absolute;
    height: 200px;
    width: 200px;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
}
.loaded .pulse { display: none }

.pulsar {
    background: rgba(59, 179, 113, 1);
    animation-name: pulse;
    animation-iteration-count: infinite;
    height: 100%;
    width: 100%;
    position: absolute;
    border-radius: 50%;
    animation-fill-mode: both;
    border: 1px solid mediumseagreen;
    transition: background-color .3s;
    animation-duration: 1.2s;
    &:nth-child(1){ animation-delay: 0s; }
    &:nth-child(2){ animation-delay: .3s }
    &:nth-child(3){ animation-delay: .6s }
}

.loader div{
    height: 14px;
    width: 14px;
    border-radius: 50%;
    animation-name: ellipse;
    animation-duration: 1.2s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    background: white;
    box-shadow: 0 2px 3px 0 rgba(0,0,0,.2);
    margin: 3px;
}
.loader div:nth-child(1){ animation-delay: .0s }
.loader div:nth-child(2){ animation-delay: .4s }
.loader div:nth-child(3){ animation-delay: .8s }


@keyframes grow {
    0%{
        transform: scale(0)
    }
}

@keyframes rot {
    0%{
        transform: rotateX(180deg);
        visibility: hidden;
    }
}

@keyframes rotb {
    100%{
        transform: rotateX(180deg);
        visibility: hidden;
    }
}


@keyframes ellipse {
    50%{
        transform: scale(.5);
    }
}



@keyframes pulse {
    0% {
        transform: scale(0);
    }
    50%{
        background: rgba(59, 179, 113, 1);
    }
    100% {
        background: rgba(59, 179, 113, 0);
        opacity: 0;
    }
}

@keyframes pitter-patter {
    25%{
        transform: scale(1.04);
    }
    75%{
        transform: scale(.96);
    }
}



.bottom-bar-container{
    position: relative;
    width: 100%;
    display: flex;
    align-items: center;
    overflow: hidden;
}

.all-progress {
    position: absolute;
    border-radius: 1000px;
    height: 10px;
    width: 100%;
    &.retracted {
        transform: translateX(100%)
    }
}

.over-container{
    height: 100%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    top: 0;
}